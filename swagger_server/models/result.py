# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Result(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, cwe: str=None, confidence: float=None, predictions: str=None, tree: List[str]=None):  # noqa: E501
        """Result - a model defined in Swagger

        :param cwe: The cwe of this Result.  # noqa: E501
        :type cwe: str
        :param confidence: The confidence of this Result.  # noqa: E501
        :type confidence: float
        :param predictions: The predictions of this Result.  # noqa: E501
        :type predictions: str
        :param tree: The tree of this Result.  # noqa: E501
        :type tree: List[str]
        """
        self.swagger_types = {
            'cwe': str,
            'confidence': float,
            'predictions': str,
            'tree': List[str]
        }

        self.attribute_map = {
            'cwe': 'cwe',
            'confidence': 'confidence',
            'predictions': 'predictions',
            'tree': 'tree'
        }
        self._cwe = cwe
        self._confidence = confidence
        self._predictions = predictions
        self._tree = tree

    @classmethod
    def from_dict(cls, dikt) -> 'Result':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Result of this Result.  # noqa: E501
        :rtype: Result
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cwe(self) -> str:
        """Gets the cwe of this Result.


        :return: The cwe of this Result.
        :rtype: str
        """
        return self._cwe

    @cwe.setter
    def cwe(self, cwe: str):
        """Sets the cwe of this Result.


        :param cwe: The cwe of this Result.
        :type cwe: str
        """

        self._cwe = cwe

    @property
    def confidence(self) -> float:
        """Gets the confidence of this Result.


        :return: The confidence of this Result.
        :rtype: float
        """
        return self._confidence

    @confidence.setter
    def confidence(self, confidence: float):
        """Sets the confidence of this Result.


        :param confidence: The confidence of this Result.
        :type confidence: float
        """

        self._confidence = confidence

    @property
    def predictions(self) -> str:
        """Gets the predictions of this Result.


        :return: The predictions of this Result.
        :rtype: str
        """
        return self._predictions

    @predictions.setter
    def predictions(self, predictions: str):
        """Sets the predictions of this Result.


        :param predictions: The predictions of this Result.
        :type predictions: str
        """

        self._predictions = predictions

    @property
    def tree(self) -> List[str]:
        """Gets the tree of this Result.


        :return: The tree of this Result.
        :rtype: List[str]
        """
        return self._tree

    @tree.setter
    def tree(self, tree: List[str]):
        """Sets the tree of this Result.


        :param tree: The tree of this Result.
        :type tree: List[str]
        """

        self._tree = tree
